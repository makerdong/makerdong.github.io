<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/08/10/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>如何在阿里云服务器上（ubuntu）搭建个人博客（hexo）</title>
    <url>/2020/08/10/%E5%A6%82%E4%BD%95%E5%9C%A8%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%EF%BC%88ubuntu%EF%BC%89%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88hexo%EF%BC%89-1/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言:"></a><strong>前言:</strong></h2><p>一个程序员怎么可以没有的自己的网页or博客呢。所以决定买台阿里云ECS服务器，搭建个人博客和以后的个人项目展示。在这过程没少踩坑，所以希望通过这篇blog总结自己踩过的坑，也可以帮助到看我这篇blog的老铁。</p>
<p>1、购买阿里云主机（Ubuntu 20.04 LTS） → 2、购买域名 → 3、域名在管局备案 →4、域名DNS解析</p>
<h2 id="一、服务器使用"><a href="#一、服务器使用" class="headerlink" title="一、服务器使用"></a>一、服务器使用</h2><p>在<strong>云服务器管理控制器</strong>中的实例便是我们的服务器了<br><img src="https://img-blog.csdnimg.cn/20200208121530196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDMxMTU4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>要做的第一步便是修改<strong>SSH</strong>连接的密码，在这里便可以修改<strong>SSH</strong>连接的密码<br><img src="https://img-blog.csdnimg.cn/20200208121839518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDMxMTU4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>注意下面这个是修改VNC的密码，不是修改SSH密码，一开始就是卡在这里了。。。。<img src="https://img-blog.csdnimg.cn/20200208122321696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDMxMTU4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>修改成功后，便可以用一些连接<strong>SSH的工具</strong>进行连接，可以去百度下这里就不多赘述</p>
<p>当连接好之后，比如你想要在服务器中搭建一个<strong>wordpress</strong>博客，那么新手的话推荐下载宝塔面板，很方便可以一键下载<code>apache，MySQL</code>等，当然也可以自己手动下载，具体的流程也很简单，网上教程也有很多，只需按照人家的操作走就可以了，这里只说一下安全组的问题</p>
<p>比如你<code>MySQL</code>需要3306端口，就必须在安全组中开发这个3306端口<br><img src="https://img-blog.csdnimg.cn/20200208122650748.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDMxMTU4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>授权对象设置为<code>0.0.0.0/0</code>就可以了，具体原因可以去看下大师傅们的博客<br><img src="https://img-blog.csdnimg.cn/20200208122730694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDMxMTU4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>注意了这里就是第一个天坑，如果你没有设置安全组的可访问端口，你就不能访问这个端口了和防火墙端口一个道理。了解了这些之后，就开始部署博客！</p>
<h2 id="二、部署博客"><a href="#二、部署博客" class="headerlink" title="二、部署博客"></a><strong>二、部署博客</strong></h2><h4 id="部署环境-："><a href="#部署环境-：" class="headerlink" title="部署环境 ："></a><strong>部署环境</strong> ：</h4><p><strong>本地：</strong> 就是你正在使用的电脑系统</p>
<pre><code class="hljs c">我的：win10操作系统
在本地需要完成的事：搭建好Hexo博客，然后使用git将本地的hexo博客push到你的服务器上</code></pre>

<p><strong>服务器：</strong></p>
<pre><code class="hljs c">一台云ECS服务器
操作系统： Ubuntu  <span class="hljs-number">20.04</span> <span class="hljs-number">64</span>位</code></pre>

<h4 id="服务器端配置"><a href="#服务器端配置" class="headerlink" title="服务器端配置"></a>服务器端配置</h4><p>首先安装<strong>git</strong>和<strong>nginx</strong>，Git 用于版本管理和部署，Nginx 用于静态博客托管。</p>
<pre><code class="hljs c">apt-get update
apt-get install git-core nginx</code></pre>

<h6 id="0x01-创建私有-Git-仓库"><a href="#0x01-创建私有-Git-仓库" class="headerlink" title="0x01: 创建私有 Git 仓库"></a>0x01: 创建私有 Git 仓库</h6><p><strong>用处：</strong>git仓库是存放你从本地push到服务器上的码源。</p>
<p>在 <code>/var/repo/</code> 下，创建一个名为 <code>hexo_static</code> 的裸仓库,然后需要修改用户对目录的权限</p>
<pre><code class="hljs py">sudo mkdir /var/repo/
sudo chown -R $USER:$USER /var/repo/
sudo chmod -R <span class="hljs-number">755</span> /var/repo/</code></pre>

<p>然后，执行下面的命令：</p>
<pre><code class="hljs c">cd /var/repo/
git init --bare hexo_static.git</code></pre>

<h6 id="0x02-配置-Nginx-托管文件目录"><a href="#0x02-配置-Nginx-托管文件目录" class="headerlink" title="0x02:配置 Nginx 托管文件目录"></a>0x02:配置 Nginx 托管文件目录</h6><p>创建 <code>/var/www/hexo</code> 目录，用于 Nginx 托管（我们访问博客就是访问这个文件目录里的资源）</p>
<pre><code class="hljs c">sudo mkdir -p /var/www/hexo

#修改目录的所有权和权限
sudo chown -R $USER:$USER /var/www/hexo
sudo chmod -R <span class="hljs-number">755</span> /var/www/hexo

#修改 Nginx 的 <span class="hljs-keyword">default</span> 设置
sudo vim /etc/nginx/sites-available/<span class="hljs-keyword">default</span>
...
server &#123;
    listen <span class="hljs-number">80</span> default_server;
    listen [::]:<span class="hljs-number">80</span> default_server;

    root /var/www/hexo; # 需要修改的部分
    index index.html index.htm;
...
将其中的 root 指令指向 /var/www/hexo 目录，就是让客户端默认访问这里的资源</code></pre>

<p><img src="https://img-blog.csdnimg.cn/20200208125438130.png" alt="在这里插入图片描述"><br>修改完成之后，重启 <code>Nginx</code> 服务，使改动生效</p>
<pre><code class="hljs c">sudo service nginx restart</code></pre>

<h6 id="0x03-创建-Git-钩子"><a href="#0x03-创建-Git-钩子" class="headerlink" title="0x03:创建 Git 钩子"></a>0x03:创建 Git 钩子</h6><p>在服务器上的裸仓库 <code>hexo_static</code> 创建一个钩子，在满足特定条件时将静态 <code>HTML</code> 文件传送到 Web 服务器的目录下，即 <code>/var/www/hexo</code></p>
<pre><code class="hljs c">#在自动生成的 `hooks` 目录下创建一个新的钩子文件
vim /var/repo/hexo_static.git/hooks/post-receive

#在此文件中添加两行代码，指定 Git 的工作树（源代码）和 Git 目录（配置文件等）
#!/bin/bash
git --work-tree=/var/www/hexo --git-dir=/var/repo/hexo_static.git checkout -f

#保存退出文件后，需要让该文件变为可执行文件。
chmod +x /var/repo/hexo_static.git/hooks/post-receive
<span class="hljs-number">123456789</span></code></pre>

<p>如果以上都配置好后，服务器端的配置基本就结束了，下面就开始配置本地的Hexo</p>
<h4 id="本地Hexo配置"><a href="#本地Hexo配置" class="headerlink" title="本地Hexo配置"></a><strong>本地Hexo配置</strong></h4><h6 id="0x01-修改URL"><a href="#0x01-修改URL" class="headerlink" title="0x01:修改URL"></a>0x01:修改URL</h6><p>之所以配置本地Hexo是为了自动部署到服务器端的 <code>hexo_static</code> 裸仓库中，<code>_config.yml</code> 为 Hexo 的主配置文件。首先需要修改的便是博客的 <code>URL</code> 地址<br><img src="https://img-blog.csdnimg.cn/20200208173749793.png" alt="在这里插入图片描述"></p>
<pre><code class="hljs c"># URL
## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;

url: http:<span class="hljs-comment">//server-ip # 没有绑定域名时填写服务器的实际 IP 地址。</span>
root: /
permalink: :year/:month/:day/:title/
permalink_defaults:
<span class="hljs-number">1234567</span></code></pre>

<h6 id="0x02-Git-部署"><a href="#0x02-Git-部署" class="headerlink" title="0x02: Git 部署"></a><strong>0x02: Git 部署</strong></h6><p>编辑 <code>_config.yml</code> 文件，修改<code>Deployment</code> 部分</p>
<pre><code class="hljs c">deploy:
    type: git
    repo: root@云服务器的IP地址:/var/repo/hexo_static
    branch: master
<span class="hljs-number">1234</span></code></pre>

<p><img src="https://img-blog.csdnimg.cn/20200208174104683.png" alt="在这里插入图片描述"><br>如果到这一步了，那基本就结束了</p>
<pre><code class="hljs c">hexo g &amp;&amp; hexo d
<span class="hljs-number">1</span></code></pre>

<p>但是还是会遇到一些问题，如：在部署时会遇到（这里借用别人的图）<br><img src="https://img-blog.csdnimg.cn/20200208174347686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDMxMTU4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>就类似这种问题，解决方法网上也有，只不过让人看的很晕，还好查到了一位大神的博客，出现这个问题的原因在于,第一次使用<code>SSH</code>连接时，会生成一个认证，储存在客户端的<code>known_hosts</code>中，解决方法就是：</p>
<pre><code class="hljs php">ssh-keygen -R 服务器端的ip地址
<span class="hljs-number">1</span></code></pre>

<p>这样就可以将报错提示的那行给删掉了，从而可以进行正常的连接</p>
<pre><code class="hljs c">hexo g &amp;&amp; hexo d
<span class="hljs-number">1</span></code></pre>

<p>如果出现这样显示，那就是已经部署好了<br><img src="https://img-blog.csdnimg.cn/20200208175008937.png" alt="在这里插入图片描述"></p>
<p>在我才了三天的坑后，看到了这位朋友的blog才发现自己的问题出在哪，感谢感谢<br><a href="https://blog.csdn.net/qq_43431158/article/details/104221186">https://blog.csdn.net/qq_43431158/article/details/104221186</a></p>
<p>天坑总结</p>
<p>1、需要设置阿里云安全组，开放公网可访问的端口</p>
<p>2、服务器如果在开启防火墙的情况下，也要开放可被外界访问的端口，如80 8080</p>
<p>3、在本地 安装Node.js  → 第二步：安装hexo基本框架 config.yml文件</p>
<p>4、在服务器端 配置nginx默认访问路径</p>
<p>如果大家有遇到问题欢迎交流！！</p>
]]></content>
  </entry>
  <entry>
    <title>我的第一篇博客</title>
    <url>/2020/08/10/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
